	--comment ignored

	--comment ignored
found export
 found class
 found Point

    found let
 found x
 found =
 found 0

    found let
 found y
 found =
 found 0


    found let
 found new
found (
found self
, found x
, found y
found )

        found self.x
 found =
 found x

        found self.y
 found =
 found y


    found let
 found __sub__
found (
found self
, found b
found )

        found return
 found Vector
found (
found b.x
 found -
 found self.x
, found b.y
 found -
 found self.y
found )



	--comment ignored
found export
 found let
 found Vector
 found =
 found Point


	--comment ignored
found export
 found let
 found distance
found (
found a
, found b
found )

    found return
 found b
 found -
 found a


	--comment ignored
found export
 found class
 found Rectangle

    found let
 found top_left
 found =
 found Point
found (
found 0
, found 0
found )

    found let
 found bottom_right
 found =
 found Point
found (
found 0
, found 0
found )


    found let
 found new
found (
found self
, found top_left
, found bottom_right
found )

        found self.top_left
 found =
 found top_left

        found self.bottom_right
 found =
 found bottom_right


    found let
 found width
found (
found self
found )

        found return
 found (
found self.bottom_right
 found -
 found self.top_left
found )
.found x


    found let
 found height
found (
found self
found )

        found return
 found (
found self.bottom_right
 found -
 found self.top_left
found )
.found y

~~~ end of parse ~~~
